{
	"info": {
		"_postman_id": "e93e41c8-aa5e-4d67-9d5d-41a5e0a234b2",
		"name": "Api-Collection-ReemaSharma",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check UserID and Id\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"    var i=0;\r",
							"    while(i<jsonData.length){\r",
							"        if(jsonData[i].id == 40)\r",
							"          pm.expect(jsonData[i].userId).to.equal(4);\r",
							"        ++i;\r",
							"    }\r",
							"});\r",
							"pm.test(\"Check String\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"    var i=0;\r",
							"    while(i<jsonData.length){\r",
							"        pm.expect(jsonData[i].title).to.be.a('String')\r",
							"        ++i;\r",
							"    }\r",
							"});\r",
							"pm.test(\"http status check\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							" \r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"})\r",
							" \r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"})\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{jsonplaceholder}}/posts",
					"host": [
						"{{jsonplaceholder}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check Resposne with Request\", function () {\r",
							"    var reqbody = JSON.parse(pm.request.body.raw)\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.first_name).to.equal(reqbody.first_name);\r",
							"    pm.expect(jsonData.last_name).to.equal(reqbody.last_name);\r",
							"    pm.expect(jsonData.email).to.equal(reqbody.email);\r",
							" \r",
							"    pm.environment.set('first_name', jsonData.first_name)\r",
							"    pm.environment.set('last_name',jsonData.last_name)\r",
							"    pm.environment.set('email', jsonData.email)\r",
							"});\r",
							" \r",
							"pm.test(\"API response contains the expected fields\", () => {\r",
							"  const response = pm.response.json();\r",
							"  pm.expect(response).to.have.property(\"updatedAt\");\r",
							"})\r",
							"pm.test(\"http status check\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"})\r",
							" \r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"})\r",
							" \r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{reqres}}/api/users",
					"host": [
						"{{reqres}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		}
	]
}